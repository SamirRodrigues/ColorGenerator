{"version":3,"sources":["SingleColor.js","App.js","index.js"],"names":["SingleColor","rgb","weight","index","hex","useState","alert","setAlert","bgc","join","hexValue","useEffect","timeOut","setTimeout","clearTimeout","onClick","navigator","clipboard","writeText","className","style","backgroundColor","App","percent","setPercent","color","setColor","error","setError","Values","all","list","setList","handleSubmit","e","preventDefault","colors","parseInt","onSubmit","type","name","id","value","onChange","target","placeholder","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLA8BeA,EA5BK,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,IAAKC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAAU,EACzBC,oBAAS,GADgB,mBAC5CC,EAD4C,KACrCC,EADqC,KAE7CC,EAAMP,EAAIQ,KAAK,KAEfC,EAAQ,WAAON,GAQrB,OANAO,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBN,GAAS,KACR,KACH,OAAO,kBAAMO,aAAaF,MACzB,CAACN,IAEF,6BACES,QAAS,WACPR,GAAS,GACTS,UAAUC,UAAUC,UAAUR,IAEhCS,UAAS,gBAAWhB,EAAQ,IAAM,eAClCiB,MAAO,CAAEC,gBAAgB,OAAD,OAASb,EAAT,OAExB,uBAAGW,UAAU,iBAAiBjB,EAA9B,KACA,uBAAGiB,UAAU,iBAAiBT,GAC7BJ,GAAS,uBAAGa,UAAU,SAAb,2B,gBCuCDG,MA3Df,WAAgB,IAAD,EACiBjB,mBAAS,GAD1B,mBACNkB,EADM,KACGC,EADH,OAGanB,mBAAS,IAHtB,mBAGNoB,EAHM,KAGCC,EAHD,OAIarB,oBAAS,GAJtB,mBAINsB,EAJM,KAICC,EAJD,OAKWvB,mBAAS,IAAIwB,IAAO,WAAWC,IAAI,KAL9C,mBAKNC,EALM,KAKAC,EALA,KAOPC,EAAe,SAAAC,GACnBA,EAAEC,iBACF,IACE,IAAIC,EAAS,IAAIP,IAAOJ,GAAOK,IAAIO,SAASd,IAC5CS,EAAQI,GACRR,GAAS,GACT,MAAOD,GACPC,GAAS,KAGb,OACE,oCACE,6BAAST,UAAU,aACjB,qDACA,0BAAMmB,SAAUL,GACd,2BACEM,KAAK,SACLC,KAAK,GACLC,GAAG,GACHC,MAAOnB,EACPoB,SAAU,SAAAT,GAAC,OAAIV,EAAWU,EAAEU,OAAOF,QACnCvB,UAAU,SACV0B,YAAY,OAEd,2DAEF,0BAAMP,SAAUL,GACd,2BACEM,KAAK,OACLC,KAAK,GACLC,GAAG,GACHC,MAAOjB,EACPkB,SAAU,SAAAT,GAAC,OAAIR,EAASQ,EAAEU,OAAOF,QACjCG,YAAY,UACZ1B,UAAS,UAAKQ,EAAQ,QAAU,QAElC,4BAAQR,UAAU,MAAMoB,KAAK,UAA7B,YAKJ,6BAASpB,UAAU,UAChBY,EAAKe,KAAI,SAACrB,EAAOtB,GAChB,OACE,kBAAC,EAAD,eAAa4C,IAAK5C,GAAWsB,EAA7B,CAAoCtB,MAAOA,EAAOC,IAAKqB,EAAMrB,aCnDzE4C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.947bbd36.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst SingleColor = ({ rgb, weight, index, hex }) => {\n  const [alert, setAlert] = useState(false)\n  const bgc = rgb.join(',')\n\n  const hexValue = `#${hex}`\n\n  useEffect(() => {\n    const timeOut = setTimeout(() => {\n      setAlert(false)\n    }, 3000)\n    return () => clearTimeout(timeOut)\n  }, [alert])\n  return (\n    <article\n      onClick={() => {\n        setAlert(true)\n        navigator.clipboard.writeText(hexValue)\n      }}\n      className={`color ${index > 10 && 'color-light'}`}\n      style={{ backgroundColor: `rgb(${bgc})` }}\n    >\n      <p className=\"percent-value\">{weight}%</p>\n      <p className=\"percent-value\">{hexValue}</p>\n      {alert && <p className=\"alert\"> copied to clipboard </p>}\n    </article>\n  )\n}\n\nexport default SingleColor\n","import React, { useState } from 'react'\nimport SingleColor from './SingleColor'\n\nimport Values from 'values.js'\n\nfunction App() {\n  const [percent, setPercent] = useState(0)\n\n  const [color, setColor] = useState('')\n  const [error, setError] = useState(false)\n  const [list, setList] = useState(new Values('#f15025').all(10))\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    try {\n      let colors = new Values(color).all(parseInt(percent))\n      setList(colors)\n      setError(false)\n    } catch (error) {\n      setError(true)\n    }\n  }\n  return (\n    <>\n      <section className=\"container\">\n        <h3>color scale generator</h3>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"number\"\n            name=\"\"\n            id=\"\"\n            value={percent}\n            onChange={e => setPercent(e.target.value)}\n            className=\"number\"\n            placeholder=\"10\"\n          />\n          <h5>Scale Percentage Variation</h5>\n        </form>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            name=\"\"\n            id=\"\"\n            value={color}\n            onChange={e => setColor(e.target.value)}\n            placeholder=\"#f15025\"\n            className={`${error ? 'error' : null}`}\n          />\n          <button className=\"btn\" type=\"submit\">\n            Submit\n          </button>\n        </form>\n      </section>\n      <section className=\"colors\">\n        {list.map((color, index) => {\n          return (\n            <SingleColor key={index} {...color} index={index} hex={color.hex} />\n          )\n        })}\n      </section>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}